{"ast":null,"code":"import { vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"add\"\n};\nconst _hoisted_2 = {\n  class: \"main-input\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"blind\"\n}, \"Add\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"add__input\",\n    placeholder: \"Enter your task here\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newTodoItem = $event),\n    onKeypress: _cache[1] || (_cache[1] = _withKeys((...args) => $options.addTodoItem && $options.addTodoItem(...args), [\"enter\"])),\n    ref: \"taskInput\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.newTodoItem]]), _createElementVNode(\"button\", {\n    class: \"add__buttonn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addTodoItem && $options.addTodoItem(...args))\n  }, _hoisted_4)])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","_hoisted_2","type","placeholder","$data","newTodoItem","$event","onKeypress","_cache","_withKeys","args","$options","addTodoItem","ref","onClick"],"sources":["C:\\git-workspace\\vue3-sample\\src\\components\\TodoInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"add\">\r\n    <div class=\"main-input\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"add__input\"\r\n        placeholder=\"Enter your task here\"\r\n        v-model=\"newTodoItem\"\r\n        v-on:keypress.enter=\"addTodoItem\"\r\n        ref=\"taskInput\"\r\n      />\r\n      <button class=\"add__buttonn\" v-on:click=\"addTodoItem\">\r\n        <span class=\"blind\">Add</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTodoItem: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"storedTodoItems\", \"storedTodoItemsCount\"])\r\n  },\r\n  methods: {\r\n    addTodoItem() {\r\n      // 중복되는 내용인 경우\r\n      const oldItems = this.storedTodoItems;\r\n      for (let i = 0; i < this.storedTodoItemsCount; i++) {\r\n        if (oldItems[i].item === this.newTodoItem) {\r\n          const text = \"I think you've already had the task.\";\r\n          this.$emit(\"alertModal\", text);\r\n          return false;\r\n        }\r\n      }\r\n      // 빈 내용인 경우\r\n      if (this.newTodoItem === \"\") {\r\n        const text = \"The form is empty. Please note your task.\";\r\n        this.$emit(\"alertModal\", text);\r\n        this.clearInput();\r\n        return false;\r\n      }\r\n      this.$store.commit(\"addOneItem\", this.newTodoItem);\r\n      this.clearInput();\r\n      this.$refs.taskInput.focus();\r\n    },\r\n    clearInput() {\r\n      this.newTodoItem = \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.add {\r\n  position: relative;\r\n  max-width: $max-width;\r\n  margin: 0 auto;\r\n  .main-input {\r\n    @include animation(fadeShow, 800ms, 1, 900ms);\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAY;gCAUnBC,mBAAA,CAA8B;EAAxBD,KAAK,EAAC;AAAO,GAAC,KAAG;oBAAvBE,UAA8B,C;;uBAXpCC,mBAAA,CAcM,OAdNC,UAcM,GAbJH,mBAAA,CAYM,OAZNI,UAYM,G,gBAXJJ,mBAAA,CAOE;IANAK,IAAI,EAAC,MAAM;IACXN,KAAK,EAAC,YAAY;IAClBO,WAAW,EAAC,sBAAsB;+DACzBC,KAAA,CAAAC,WAAW,GAAAC,MAAA;IACfC,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAChCG,GAAG,EAAC;iEAFKT,KAAA,CAAAC,WAAW,E,GAItBR,mBAAA,CAES;IAFDD,KAAK,EAAC,cAAc;IAAMkB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}