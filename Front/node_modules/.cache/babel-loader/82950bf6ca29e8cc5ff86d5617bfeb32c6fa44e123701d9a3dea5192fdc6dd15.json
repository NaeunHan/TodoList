{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withKeys as _withKeys, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"title\"\n};\nconst _hoisted_2 = {\n  class: \"title__text\"\n};\nconst _hoisted_3 = {\n  class: \"title__message\"\n};\nconst _hoisted_4 = {\n  class: \"title__task\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title__task-top\"\n}, \"오늘 해야 할 일은 :D?\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"title__task-count\"\n};\nconst _hoisted_7 = {\n  class: \"title__task-left\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"title__task-total\"\n};\nconst _hoisted_9 = {\n  class: \"title__task-bottom\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"title__task-info\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($data.message) + \",\", 1 /* TEXT */), _createElementVNode(\"span\", {\n    onKeyup: _cache[0] || (_cache[0] = _withKeys((...args) => $options.handleEnter && $options.handleEnter(...args), [\"enter\"])),\n    onBlur: _cache[1] || (_cache[1] = (...args) => $options.handleBlur && $options.handleBlur(...args)),\n    class: \"title__name\",\n    ref: \"test\",\n    contenteditable: \"true\"\n  }, _toDisplayString(this.userName), 545 /* TEXT, HYDRATE_EVENTS, NEED_PATCH */)]), _createElementVNode(\"p\", _hoisted_4, [_hoisted_5, _createElementVNode(\"span\", _hoisted_6, [_createElementVNode(\"em\", _hoisted_7, _toDisplayString(this.todoItemsCount.left), 1 /* TEXT */), this.todoItemsCount.total ? (_openBlock(), _createElementBlock(\"em\", _hoisted_8, \" / \" + _toDisplayString(this.todoItemsCount.total), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"span\", _hoisted_9, [this.todoItemsCount.total > 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11)), _createTextVNode(\" 입니다. \")]), _hoisted_12])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","message","onKeyup","_cache","_withKeys","args","$options","handleEnter","onBlur","handleBlur","ref","contenteditable","userName","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","todoItemsCount","left","total","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12"],"sources":["C:\\git-workspace\\vue3-sample\\src\\components\\TodoTitle.vue"],"sourcesContent":["<template>\r\n  <div class=\"title\">\r\n    <p class=\"title__text\">\r\n      <span class=\"title__message\">{{ message }},</span>\r\n      <span\r\n        v-on:keyup.enter=\"handleEnter\"\r\n        v-on:blur=\"handleBlur\"\r\n        class=\"title__name\"\r\n        ref=\"test\"\r\n        contenteditable=\"true\"\r\n      >{{ this.userName }}</span>\r\n    </p>\r\n    <p class=\"title__task\">\r\n      <span class=\"title__task-top\">오늘 해야 할 일은 :D?</span>\r\n      <span class=\"title__task-count\">\r\n        <em class=\"title__task-left\">{{ this.todoItemsCount.left }}</em>\r\n        <em\r\n          v-if=\"this.todoItemsCount.total\"\r\n          class=\"title__task-total\"\r\n        >&nbsp;/ {{ this.todoItemsCount.total }}</em>\r\n      </span>\r\n      <span class=\"title__task-bottom\">\r\n        <span v-if=\"this.todoItemsCount.total > 1\"></span>\r\n        <span v-else></span> 입니다.\r\n      </span>\r\n      <span class=\"title__task-info\"></span>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getDate from \"../assets/commonJS/getDate.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //시간대별로 morning, afternoon, evening 출력\r\n      message: \"\",\r\n      // 저장된 userName 가져옴\r\n      userName: this.$store.getters.storedName\r\n    };\r\n  },\r\n  methods: {\r\n    // 포커스아웃시, 입력된 이름을 userName으로 저장\r\n    handleBlur(e) {\r\n      const originalName = this.userName;\r\n      const newName = e.target.innerText;\r\n      if (newName !== originalName) {\r\n        if (newName === \"\") {\r\n          e.target.innerText = originalName;\r\n        } else {\r\n          this.$store.commit(\"setUserName\", newName);\r\n        }\r\n      }\r\n    },\r\n    handleEnter() {\r\n      this.$refs.test.blur();\r\n    }\r\n  },\r\n  computed: {\r\n    \r\n    // 할 일 목록 수 표시\r\n    todoItemsCount() {\r\n      const checkLeftItems = () => {\r\n        const items = this.$store.getters.storedTodoItems;\r\n        let leftCount = 0;\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (items[i].completed === false) {\r\n            leftCount++;\r\n          }\r\n        }\r\n        return leftCount;\r\n      };\r\n      const count = {\r\n        total: this.$store.getters.storedTodoItemsCount,\r\n        left: checkLeftItems()\r\n      };\r\n      return count;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = getDate().daytime;\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n\r\n.title {\r\n  max-width: $max-width;\r\n  margin: 0 auto;\r\n  letter-spacing: 0.03rem;\r\n  color: rgb(236, 241, 241);\r\n\r\n  &__text {\r\n    cursor: default;\r\n    font-size: 1.6rem;\r\n    @include flexbox;\r\n    @include align-items(center);\r\n    @include flex-wrap(wrap);\r\n    @include ellipsis();\r\n  }\r\n\r\n  .wrap {\r\n    position: relative;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__message {\r\n    display: block;\r\n    min-height: 2.7rem;\r\n    margin-right: 0.4rem;\r\n    @include flex-shrink(0);\r\n  }\r\n\r\n  &__name {\r\n    display: block;\r\n    background: 0;\r\n    border: 0;\r\n    outline: 0;\r\n    color: inherit;\r\n    font-size: inherit;\r\n    min-width: 1rem;\r\n    min-height: 2.7rem;\r\n    overflow: hidden;\r\n    @include flex-shrink(1);\r\n    br {\r\n      display: none;\r\n    }\r\n    &:hover {\r\n      text-decoration: underline;\r\n      cursor: text;\r\n    }\r\n    &:focus {\r\n      opacity: 0.8;\r\n      // outline: 1px solid #fafafa;\r\n      background: rgba(155, 123, 123, 0.15);\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  &__task {\r\n    margin-top: 3.5rem;\r\n    margin-bottom: 5rem;\r\n    font-weight: bold;\r\n    &-top {\r\n      display: block;\r\n      font-size: 2.6rem;\r\n    }\r\n    &-count {\r\n      display: block;\r\n      font-size: 5.4rem;\r\n    }\r\n    &-total {\r\n      font-size: 50%;\r\n    }\r\n    &-bottom {\r\n      display: block;\r\n      font-size: 2.8rem;\r\n      line-height: 50%;\r\n    }\r\n  }\r\n}\r\n//애니메이션 관리\r\n\r\n.title {\r\n  &__text {\r\n    @include animation(fadeShow, 500ms);\r\n  }\r\n  &__task-top {\r\n    @include animation(fadeShow, 600ms, 1, 400ms);\r\n  }\r\n  &__task-count {\r\n    @include animation(fadeShow, 600ms, 1, 550ms);\r\n  }\r\n  &__task-bottom {\r\n    @include animation(fadeShow, 600ms, 1, 700ms);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EACbA,KAAK,EAAC;AAAa;;EACdA,KAAK,EAAC;AAAgB;;EAS3BA,KAAK,EAAC;AAAa;gCACpBC,mBAAA,CAAmD;EAA7CD,KAAK,EAAC;AAAiB,GAAC,gBAAc;;EACtCA,KAAK,EAAC;AAAmB;;EACzBA,KAAK,EAAC;AAAkB;;;EAG1BA,KAAK,EAAC;;;EAGJA,KAAK,EAAC;AAAoB;;;;;;;iCAIhCC,mBAAA,CAAsC;EAAhCD,KAAK,EAAC;AAAkB;;;uBAxBlCE,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJF,mBAAA,CASI,KATJG,UASI,GARFH,mBAAA,CAAkD,QAAlDI,UAAkD,EAAAC,gBAAA,CAAlBC,KAAA,CAAAC,OAAO,IAAG,GAAC,iBAC3CP,mBAAA,CAM2B;IALpBQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IACxBG,MAAI,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAG,UAAA,IAAAH,QAAA,CAAAG,UAAA,IAAAJ,IAAA,CAAU;IACrBZ,KAAK,EAAC,aAAa;IACnBiB,GAAG,EAAC,MAAM;IACVC,eAAe,EAAC;2BACTC,QAAQ,+C,GAEnBlB,mBAAA,CAcI,KAdJmB,UAcI,GAbFC,UAAmD,EACnDpB,mBAAA,CAMO,QANPqB,UAMO,GALLrB,mBAAA,CAAgE,MAAhEsB,UAAgE,EAAAjB,gBAAA,MAA3BkB,cAAc,CAACC,IAAI,kB,KAE3CD,cAAc,CAACE,KAAK,I,cADjCxB,mBAAA,CAG6C,MAH7CyB,UAG6C,EAA5C,KAAQ,GAAArB,gBAAA,MAAQkB,cAAc,CAACE,KAAK,oB,qCAEvCzB,mBAAA,CAGO,QAHP2B,UAGO,G,KAFYJ,cAAc,CAACE,KAAK,Q,cAArCxB,mBAAA,CAAkD,QAAA2B,WAAA,M,cAClD3B,mBAAA,CAAoB,QAAA4B,WAAA,I,iBAAA,QACtB,E,GACAC,WAAsC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}