{"ast":null,"code":"import getDate from \"./../../assets/commonJS/getDate\";\nimport axios from 'axios';\nimport storage from \"@/store/modules/storage\";\n\n// 아이템 하나 추가\nconst addOneItem = async (state, todoItem) => {\n  /* 서버 통신 */\n  var jsonValue = {\n    item: todoItem,\n    date: `${getDate().month}/${getDate().date}/${getDate().week}`,\n    time: getDate().time,\n    completed: false\n  };\n  await axios.post('/todos/save', JSON.stringify(jsonValue)).then(res => {\n    if (res.data == \"ok\") {\n      storage.fetch(state.todoOldestOrder);\n    } else {\n      alert(\"등록 실패\");\n    }\n  });\n};\n// 아이템 하나 삭제\nconst removeOneItem = (state, payload) => {\n  /* 서버 통신 */\n  axios.put('/todos/delete/' + payload.todoItem.id).then(res => {\n    if (res.data == \"ok\") {\n      storage.fetch(state.todoOldestOrder);\n    } else {\n      alert(\"삭제 실패\");\n    }\n  });\n};\n// 아이템 하나 완료 토글\nconst toggleOneItem = (state, payload) => {\n  /* 서버 통신 */\n  var jsonValue = {\n    id: payload.todoItem.id,\n    completed: !payload.todoItem.completed\n  };\n  axios.put('/todos/' + payload.todoItem.id, JSON.stringify(jsonValue)).then(res => {\n    if (res.data == \"ok\") {\n      storage.fetch(state.todoOldestOrder);\n    } else {\n      alert(\"업데이트 실패\");\n    }\n  });\n};\n// 모든 아이템 삭제\nconst clearAllItem = state => {\n  var todoItems = state.todoItems;\n  if (todoItems.length > 0) {\n    axios.put('/todos/clear').then(res => {\n      if (res.data == \"ok\") {\n        storage.fetch(state.todoOldestOrder);\n      } else {\n        alert(\"클리어 실패\");\n      }\n    });\n  }\n};\n// 최신순 정렬\nconst sortTodoLatest = state => {\n  state.todoOldestOrder = false;\n  storage.fetch(state.todoOldestOrder);\n};\n// 오래된 순 정렬\nconst sortTodoOldest = state => {\n  state.todoOldestOrder = true;\n  storage.fetch(state.todoOldestOrder);\n};\n// 사용자 이름 추가\nconst setUserName = (state, userName) => {\n  localStorage.setItem(\"userName\", userName);\n  state.userName = userName;\n};\nexport { addOneItem, removeOneItem, toggleOneItem, clearAllItem, sortTodoLatest, sortTodoOldest, setUserName };","map":{"version":3,"names":["getDate","axios","storage","addOneItem","state","todoItem","jsonValue","item","date","month","week","time","completed","post","JSON","stringify","then","res","data","fetch","todoOldestOrder","alert","removeOneItem","payload","put","id","toggleOneItem","clearAllItem","todoItems","length","sortTodoLatest","sortTodoOldest","setUserName","userName","localStorage","setItem"],"sources":["C:/git-workspace/vue3-sample/src/store/modules/mutations.js"],"sourcesContent":["\r\nimport getDate from \"./../../assets/commonJS/getDate\";\r\nimport axios from 'axios';\r\nimport storage from \"@/store/modules/storage\";\r\n\r\n// 아이템 하나 추가\r\nconst addOneItem = async (state, todoItem) => {\r\n    \r\n  /* 서버 통신 */\r\n  var jsonValue = {\r\n      item: todoItem,\r\n      date: `${getDate().month}/${getDate().date}/${getDate().week}`,\r\n      time: getDate().time,\r\n      completed: false\r\n  }\r\n\r\n  await axios\r\n      .post('/todos/save', JSON.stringify(jsonValue))\r\n      .then(res => {\r\n          if(res.data == \"ok\"){\r\n              storage.fetch(state.todoOldestOrder);\r\n          } else {\r\n              alert(\"등록 실패\");\r\n          }\r\n      });\r\n}\r\n// 아이템 하나 삭제\r\nconst removeOneItem = (state, payload) => {\r\n  /* 서버 통신 */\r\n  axios\r\n      .put('/todos/delete/' + payload.todoItem.id)\r\n      .then(res => {\r\n          if(res.data == \"ok\"){\r\n              storage.fetch(state.todoOldestOrder);\r\n          } else {\r\n              alert(\"삭제 실패\");\r\n          }\r\n      });\r\n\r\n}\r\n// 아이템 하나 완료 토글\r\nconst toggleOneItem = (state, payload) => {\r\n  /* 서버 통신 */\r\n  var jsonValue = {\r\n      id: payload.todoItem.id,\r\n      completed: !payload.todoItem.completed\r\n  }\r\n\r\n  axios\r\n      .put('/todos/' + payload.todoItem.id, JSON.stringify(jsonValue))\r\n      .then(res => {\r\n         if(res.data == \"ok\"){\r\n             storage.fetch(state.todoOldestOrder);\r\n         } else {\r\n             alert(\"업데이트 실패\");\r\n         }\r\n      });\r\n\r\n}\r\n// 모든 아이템 삭제\r\nconst clearAllItem = (state) => {\r\n  var todoItems = state.todoItems;\r\n  if(todoItems.length > 0){\r\n      axios\r\n          .put('/todos/clear')\r\n          .then(res => {\r\n              if(res.data == \"ok\"){\r\n                  storage.fetch(state.todoOldestOrder);\r\n              } else {\r\n                  alert(\"클리어 실패\");\r\n              }\r\n          });\r\n  }\r\n}\r\n// 최신순 정렬\r\nconst sortTodoLatest = (state) => {\r\n  state.todoOldestOrder = false;\r\n\r\n  storage.fetch(state.todoOldestOrder);\r\n}\r\n// 오래된 순 정렬\r\nconst sortTodoOldest = (state) => {\r\n  state.todoOldestOrder = true;\r\n\r\n  storage.fetch(state.todoOldestOrder);\r\n}\r\n// 사용자 이름 추가\r\nconst setUserName = (state, userName) => {\r\n  localStorage.setItem(\"userName\", userName);\r\n  state.userName = userName;\r\n}\r\n\r\nexport { addOneItem, removeOneItem, toggleOneItem, clearAllItem, sortTodoLatest, sortTodoOldest, setUserName };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}