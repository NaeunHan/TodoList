{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      newTodoItem: \"\"\n    };\n  },\n  computed: {\n    ...mapGetters([\"storedTodoItems\", \"storedTodoItemsCount\"])\n  },\n  methods: {\n    addTodoItem() {\n      // 중복되는 내용인 경우\n      const oldItems = this.storedTodoItems;\n      for (let i = 0; i < this.storedTodoItemsCount; i++) {\n        if (oldItems[i].item === this.newTodoItem) {\n          const text = \"I think you've already had the task.\";\n          this.$emit(\"alertModal\", text);\n          return false;\n        }\n      }\n      // 빈 내용인 경우\n      if (this.newTodoItem === \"\") {\n        const text = \"The form is empty. Please note your task.\";\n        this.$emit(\"alertModal\", text);\n        this.clearInput();\n        return false;\n      }\n      this.$store.commit(\"addOneItem\", this.newTodoItem);\n      this.clearInput();\n      this.$refs.taskInput.focus();\n    },\n    clearInput() {\n      this.newTodoItem = \"\";\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","newTodoItem","computed","methods","addTodoItem","oldItems","storedTodoItems","i","storedTodoItemsCount","item","text","$emit","clearInput","$store","commit","$refs","taskInput","focus"],"sources":["C:\\git-workspace\\vue3-sample\\src\\components\\TodoInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"add\">\r\n    <div class=\"main-input\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"add__input\"\r\n        placeholder=\"Enter your task here\"\r\n        v-model=\"newTodoItem\"\r\n        v-on:keypress.enter=\"addTodoItem\"\r\n        ref=\"taskInput\"\r\n      />\r\n      <button class=\"add__buttonn\" v-on:click=\"addTodoItem\">\r\n        <span class=\"blind\">Add</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      newTodoItem: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"storedTodoItems\", \"storedTodoItemsCount\"])\r\n  },\r\n  methods: {\r\n    addTodoItem() {\r\n      // 중복되는 내용인 경우\r\n      const oldItems = this.storedTodoItems;\r\n      for (let i = 0; i < this.storedTodoItemsCount; i++) {\r\n        if (oldItems[i].item === this.newTodoItem) {\r\n          const text = \"I think you've already had the task.\";\r\n          this.$emit(\"alertModal\", text);\r\n          return false;\r\n        }\r\n      }\r\n      // 빈 내용인 경우\r\n      if (this.newTodoItem === \"\") {\r\n        const text = \"The form is empty. Please note your task.\";\r\n        this.$emit(\"alertModal\", text);\r\n        this.clearInput();\r\n        return false;\r\n      }\r\n      this.$store.commit(\"addOneItem\", this.newTodoItem);\r\n      this.clearInput();\r\n      this.$refs.taskInput.focus();\r\n    },\r\n    clearInput() {\r\n      this.newTodoItem = \"\";\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.add {\r\n  position: relative;\r\n  max-width: $max-width;\r\n  margin: 0 auto;\r\n  .main-input {\r\n    @include animation(fadeShow, 800ms, 1, 900ms);\r\n  }\r\n}\r\n</style>"],"mappings":"AAmBA,SAASA,UAAS,QAAS,MAAM;AACjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC,CAAC,iBAAiB,EAAE,sBAAsB,CAAC;EAC3D,CAAC;EACDI,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ;MACA,MAAMC,QAAO,GAAI,IAAI,CAACC,eAAe;MACrC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACC,oBAAoB,EAAED,CAAC,EAAE,EAAE;QAClD,IAAIF,QAAQ,CAACE,CAAC,CAAC,CAACE,IAAG,KAAM,IAAI,CAACR,WAAW,EAAE;UACzC,MAAMS,IAAG,GAAI,sCAAsC;UACnD,IAAI,CAACC,KAAK,CAAC,YAAY,EAAED,IAAI,CAAC;UAC9B,OAAO,KAAK;QACd;MACF;MACA;MACA,IAAI,IAAI,CAACT,WAAU,KAAM,EAAE,EAAE;QAC3B,MAAMS,IAAG,GAAI,2CAA2C;QACxD,IAAI,CAACC,KAAK,CAAC,YAAY,EAAED,IAAI,CAAC;QAC9B,IAAI,CAACE,UAAU,CAAC,CAAC;QACjB,OAAO,KAAK;MACd;MACA,IAAI,CAACC,MAAM,CAACC,MAAM,CAAC,YAAY,EAAE,IAAI,CAACb,WAAW,CAAC;MAClD,IAAI,CAACW,UAAU,CAAC,CAAC;MACjB,IAAI,CAACG,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACDL,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,WAAU,GAAI,EAAE;IACvB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}