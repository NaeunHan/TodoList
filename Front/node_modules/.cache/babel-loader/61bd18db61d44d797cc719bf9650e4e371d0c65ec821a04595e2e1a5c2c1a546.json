{"ast":null,"code":"import getDate from \"../assets/commonJS/getDate.js\";\nexport default {\n  data() {\n    return {\n      //시간대별로 morning, afternoon, evening 출력\n      message: \"\",\n      // 저장된 userName 가져옴\n      userName: this.$store.getters.storedName\n    };\n  },\n  methods: {\n    // 포커스아웃시, 입력된 이름을 userName으로 저장\n    handleBlur(e) {\n      const originalName = this.userName;\n      const newName = e.target.innerText;\n      if (newName !== originalName) {\n        if (newName === \"\") {\n          e.target.innerText = originalName;\n        } else {\n          this.$store.commit(\"setUserName\", newName);\n        }\n      }\n    },\n    handleEnter() {\n      this.$refs.test.blur();\n    }\n  },\n  computed: {\n    // 할 일 목록 수 표시\n    todoItemsCount() {\n      const checkLeftItems = () => {\n        const items = this.$store.getters.storedTodoItems;\n        let leftCount = 0;\n        for (let i = 0; i < items.length; i++) {\n          if (items[i].completed === false) {\n            leftCount++;\n          }\n        }\n        return leftCount;\n      };\n      const count = {\n        total: this.$store.getters.storedTodoItemsCount,\n        left: checkLeftItems()\n      };\n      return count;\n    }\n  },\n  mounted() {\n    this.message = getDate().daytime;\n  }\n};","map":{"version":3,"names":["getDate","data","message","userName","$store","getters","storedName","methods","handleBlur","e","originalName","newName","target","innerText","commit","handleEnter","$refs","test","blur","computed","todoItemsCount","checkLeftItems","items","storedTodoItems","leftCount","i","length","completed","count","total","storedTodoItemsCount","left","mounted","daytime"],"sources":["C:\\git-workspace\\vue3-sample\\src\\components\\TodoTitle.vue"],"sourcesContent":["<template>\r\n  <div class=\"title\">\r\n    <p class=\"title__text\">\r\n      <span class=\"title__message\">{{ message }},</span>\r\n      <span\r\n        v-on:keyup.enter=\"handleEnter\"\r\n        v-on:blur=\"handleBlur\"\r\n        class=\"title__name\"\r\n        ref=\"test\"\r\n        contenteditable=\"true\"\r\n      >{{ this.userName }}</span>\r\n    </p>\r\n    <p class=\"title__task\">\r\n      <span class=\"title__task-top\">오늘 해야 할 일은 :D?</span>\r\n      <span class=\"title__task-count\">\r\n        <em class=\"title__task-left\">{{ this.todoItemsCount.left }}</em>\r\n        <em\r\n          v-if=\"this.todoItemsCount.total\"\r\n          class=\"title__task-total\"\r\n        >&nbsp;/ {{ this.todoItemsCount.total }}</em>\r\n      </span>\r\n      <span class=\"title__task-bottom\">\r\n        <span v-if=\"this.todoItemsCount.total > 1\"></span>\r\n        <span v-else></span> 입니다.\r\n      </span>\r\n      <span class=\"title__task-info\"></span>\r\n    </p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getDate from \"../assets/commonJS/getDate.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      //시간대별로 morning, afternoon, evening 출력\r\n      message: \"\",\r\n      // 저장된 userName 가져옴\r\n      userName: this.$store.getters.storedName\r\n    };\r\n  },\r\n  methods: {\r\n    // 포커스아웃시, 입력된 이름을 userName으로 저장\r\n    handleBlur(e) {\r\n      const originalName = this.userName;\r\n      const newName = e.target.innerText;\r\n      if (newName !== originalName) {\r\n        if (newName === \"\") {\r\n          e.target.innerText = originalName;\r\n        } else {\r\n          this.$store.commit(\"setUserName\", newName);\r\n        }\r\n      }\r\n    },\r\n    handleEnter() {\r\n      this.$refs.test.blur();\r\n    }\r\n  },\r\n  computed: {\r\n    \r\n    // 할 일 목록 수 표시\r\n    todoItemsCount() {\r\n      const checkLeftItems = () => {\r\n        const items = this.$store.getters.storedTodoItems;\r\n        let leftCount = 0;\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (items[i].completed === false) {\r\n            leftCount++;\r\n          }\r\n        }\r\n        return leftCount;\r\n      };\r\n      const count = {\r\n        total: this.$store.getters.storedTodoItemsCount,\r\n        left: checkLeftItems()\r\n      };\r\n      return count;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = getDate().daytime;\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n\r\n.title {\r\n  max-width: $max-width;\r\n  margin: 0 auto;\r\n  letter-spacing: 0.03rem;\r\n  color: rgb(236, 241, 241);\r\n\r\n  &__text {\r\n    cursor: default;\r\n    font-size: 1.6rem;\r\n    @include flexbox;\r\n    @include align-items(center);\r\n    @include flex-wrap(wrap);\r\n    @include ellipsis();\r\n  }\r\n\r\n  .wrap {\r\n    position: relative;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__message {\r\n    display: block;\r\n    min-height: 2.7rem;\r\n    margin-right: 0.4rem;\r\n    @include flex-shrink(0);\r\n  }\r\n\r\n  &__name {\r\n    display: block;\r\n    background: 0;\r\n    border: 0;\r\n    outline: 0;\r\n    color: inherit;\r\n    font-size: inherit;\r\n    min-width: 1rem;\r\n    min-height: 2.7rem;\r\n    overflow: hidden;\r\n    @include flex-shrink(1);\r\n    br {\r\n      display: none;\r\n    }\r\n    &:hover {\r\n      text-decoration: underline;\r\n      cursor: text;\r\n    }\r\n    &:focus {\r\n      opacity: 0.8;\r\n      // outline: 1px solid #fafafa;\r\n      background: rgba(155, 123, 123, 0.15);\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  &__task {\r\n    margin-top: 3.5rem;\r\n    margin-bottom: 5rem;\r\n    font-weight: bold;\r\n    &-top {\r\n      display: block;\r\n      font-size: 2.6rem;\r\n    }\r\n    &-count {\r\n      display: block;\r\n      font-size: 5.4rem;\r\n    }\r\n    &-total {\r\n      font-size: 50%;\r\n    }\r\n    &-bottom {\r\n      display: block;\r\n      font-size: 2.8rem;\r\n      line-height: 50%;\r\n    }\r\n  }\r\n}\r\n//애니메이션 관리\r\n\r\n.title {\r\n  &__text {\r\n    @include animation(fadeShow, 500ms);\r\n  }\r\n  &__task-top {\r\n    @include animation(fadeShow, 600ms, 1, 400ms);\r\n  }\r\n  &__task-count {\r\n    @include animation(fadeShow, 600ms, 1, 550ms);\r\n  }\r\n  &__task-bottom {\r\n    @include animation(fadeShow, 600ms, 1, 700ms);\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,OAAOA,OAAM,MAAO,+BAA+B;AACnD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,OAAO,EAAE,EAAE;MACX;MACAC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACC;IAChC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,UAAUA,CAACC,CAAC,EAAE;MACZ,MAAMC,YAAW,GAAI,IAAI,CAACP,QAAQ;MAClC,MAAMQ,OAAM,GAAIF,CAAC,CAACG,MAAM,CAACC,SAAS;MAClC,IAAIF,OAAM,KAAMD,YAAY,EAAE;QAC5B,IAAIC,OAAM,KAAM,EAAE,EAAE;UAClBF,CAAC,CAACG,MAAM,CAACC,SAAQ,GAAIH,YAAY;QACnC,OAAO;UACL,IAAI,CAACN,MAAM,CAACU,MAAM,CAAC,aAAa,EAAEH,OAAO,CAAC;QAC5C;MACF;IACF,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;IACxB;EACF,CAAC;EACDC,QAAQ,EAAE;IAER;IACAC,cAAcA,CAAA,EAAG;MACf,MAAMC,cAAa,GAAIA,CAAA,KAAM;QAC3B,MAAMC,KAAI,GAAI,IAAI,CAAClB,MAAM,CAACC,OAAO,CAACkB,eAAe;QACjD,IAAIC,SAAQ,GAAI,CAAC;QACjB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIH,KAAK,CAACG,CAAC,CAAC,CAACE,SAAQ,KAAM,KAAK,EAAE;YAChCH,SAAS,EAAE;UACb;QACF;QACA,OAAOA,SAAS;MAClB,CAAC;MACD,MAAMI,KAAI,GAAI;QACZC,KAAK,EAAE,IAAI,CAACzB,MAAM,CAACC,OAAO,CAACyB,oBAAoB;QAC/CC,IAAI,EAAEV,cAAc,CAAC;MACvB,CAAC;MACD,OAAOO,KAAK;IACd;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC9B,OAAM,GAAIF,OAAO,CAAC,CAAC,CAACiC,OAAO;EAClC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}